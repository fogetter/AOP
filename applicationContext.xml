<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd">
    
	<!-- 配置目标对象：被增强的对象 -->
	<bean id="customerDao" class="cn.muc.spring.demo3.CustomerDaoImpl"></bean>
	
	<!-- 将切面类交给Spring管理 -->
	<bean id="myAspect" class="cn.muc.spring.demo3.MyAspectXML"></bean>
	
	<!-- 通过AOP配置完成对目标类产生代理 -->
	<aop:config>
		<!-- 配置表达式：哪些类的哪些方法需要进行增强 -->
		<aop:pointcut expression="execution(* cn.muc.spring.demo3.CustomerDaoImpl.save(..))" id="pointcut1"/>
		<aop:pointcut expression="execution(* cn.muc.spring.demo3.CustomerDaoImpl.delete(..))" id="pointcut2"/>
		<aop:pointcut expression="execution(* cn.muc.spring.demo3.CustomerDaoImpl.update(..))" id="pointcut3"/>
		<aop:pointcut expression="execution(* cn.muc.spring.demo3.CustomerDaoImpl.find(..))" id="pointcut4"/>
		<!-- 配置切面（通知） -->
		<aop:aspect ref="myAspect">
			<!-- 前置通知 -->
			<aop:before method="checkPri" pointcut-ref="pointcut1"/>
			<!-- 后置通知，returning中自定义的字符串表示切入点（原方法）返回值的名字-->
			<aop:after-returning method="writeLog" pointcut-ref="pointcut2" returning="result"/>
			<!-- 环绕通知 -->
			<aop:around method="watch" pointcut-ref="pointcut3"/>
			<!-- 异常抛出通知 -->
			<aop:after-throwing method="afterTrowing" pointcut-ref="pointcut4" throwing="ex"/>
			<!-- 最终通知 -->
			<aop:after method="after" pointcut-ref="pointcut4"/>
		</aop:aspect>
	</aop:config>


</beans>